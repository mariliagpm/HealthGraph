{
    "name": "HealthGraph",
    "apiVersion": "1.0",
    "baseUrl": "https://api.runkeeper.com",
    "description": "Health Graph API client",
    "includes": ["abstract.json"],
    "operations": {
        "GetUser": {
            "class": "\\HealthGraph\\Command\\GetUser",
            "parameters": {
                "access_token": {
                    "type": "string",
                    "required": true
                },
                "token_type": {
                    "type": "string",
                    "default": "Bearer",
                    "required": true
                }
            }
        },
        "GetProfile": {
            "httpMethod": "GET",
            "uri": "{+hg.profile}",
            "summary": "Returns profile information for the current user.",
            "responseClass": "Profile",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.Profile+json"
                }
            }
        },
        "UpdateProfile": {
            "extends": "GetProfile",
            "httpMethod": "PUT",
            "summary": "Updates profile information for the current user and returns the updated profile.",
            "parameters": {
                "athlete_type": {
                    "type": "string",
                    "location": "json",
                    "enum": ["Athlete", "Runner", "Marathoner", "Ultra Marathoner", "Cyclist", "Tri-Athlete", "Walker", "Hiker", "Skier", "Snowboarder", "Skater", "Swimmer", "Rower"]
                }
            }
        },
        "GetSettings": {
            "httpMethod": "GET",
            "uri": "{+hg.settings}",
            "summary": "Returns settings for the given user.",
            "responseClass": "GenericOutput",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.Settings+json"
                }
            }
        },
        "UpdateSettings": {
            "extends": "GetSettings",
            "httpMethod": "PUT",
            "summary": "Updates settings for the given user and returns the updated settings.",
            "parameters": {
                "share_fitness_activities": {
                    "location": "json",
                    "type": "string",
                    "enum": ["Just Me", "Friends", "Everyone"]
                },
                "share_map": {
                    "location": "json",
                    "type": "string",
                    "enum": ["Just Me", "Friends", "Everyone"]
                },
                "post_fitness_activity_facebook": {
                    "location": "json",
                    "type": "boolean"
                },
                "post_fitness_activity_twitter": {
                    "location": "json",
                    "type": "boolean"
                },
                "post_live_fitness_activity_facebook": {
                    "location": "json",
                    "type": "boolean"
                },
                "post_live_fitness_activity_twitter": {
                    "location": "json",
                    "type": "boolean"
                },
                "share_background_activities": {
                    "location": "json",
                    "type": "string",
                    "enum": ["Just Me", "Friends", "Everyone"]
                },
                "post_background_activity_facebook": {
                    "location": "json",
                    "type": "boolean"
                },
                "post_background_activity_twitter": {
                    "location": "json",
                    "type": "boolean"
                },
                "share_sleep": {
                    "location": "json",
                    "type": "string",
                    "enum": ["Just Me", "Friends", "Everyone"]
                },
                "post_sleep_facebook": {
                    "location": "json",
                    "type": "boolean"
                },
                "post_sleep_twitter": {
                    "location": "json",
                    "type": "boolean"
                },
                "share_nutrition": {
                    "location": "json",
                    "type": "string",
                    "enum": ["Just Me", "Friends", "Everyone"]
                },
                "post_nutrition_facebook": {
                    "location": "json",
                    "type": "boolean"
                },
                "post_nutrition_twitter": {
                    "location": "json",
                    "type": "boolean"
                },
                "share_weight": {
                    "location": "json",
                    "type": "string",
                    "enum": ["Just Me", "Friends", "Everyone"]
                },
                "post_weight_facebook": {
                    "location": "json",
                    "type": "boolean"
                },
                "post_weight_twitter": {
                    "location": "json",
                    "type": "boolean"
                },
                "share_general_measurements": {
                    "location": "json",
                    "type": "string",
                    "enum": ["Just Me", "Friends", "Everyone"]
                },
                "post_general_measurements_facebook": {
                    "location": "json",
                    "type": "boolean"
                },
                "post_general_measurements_twitter": {
                    "location": "json",
                    "type": "boolean"
                },
                "share_diabetes": {
                    "location": "json",
                    "type": "string",
                    "enum": ["Just Me", "Friends", "Everyone"]
                },
                "post_diabetes_facebook": {
                    "location": "json",
                    "type": "boolean"
                },
                "post_diabetes_twitter": {
                    "location": "json",
                    "type": "boolean"
                },
                "distance_units": {
                    "location": "json",
                    "type": "string",
                    "enum": ["mi", "km"]
                },
                "weight_units": {
                    "location": "json",
                    "type": "string",
                    "enum": ["lbs", "kg"]
                },
                "first_day_of_week": {
                    "location": "json",
                    "type": "string",
                    "enum": ["Sunday", "Monday"]
                }
            }
        },
        "GetCommentThread": {
            "uri": "{+uri}",
            "httpMethod": "GET",
            "responseClass": "CommentThread",
            "parameters": {
                "uri": {
                    "location": "uri",
                    "type": "string",
                    "required": true
                },
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.CommentThread+json"
                }
            }
        },
        "NewComment": {
            "uri": "{+uri}",
            "httpMethod": "POST",
            "responseClass": "CommentThread",
            "parameters": {
                "uri": {
                    "location": "uri",
                    "type": "string",
                    "required": true
                },
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.Comment+json"
                },
                "comment": {
                    "location": "json",
                    "type": "string",
                    "required": true
                }
            }
        },
        "GetFitnessActivityFeed": {
            "extends": "abstract.feed",
            "responseClass": "FitnessActivityFeedResponse",
            "uri": "{+hg.fitness_activities}",
            "summary": "Returns fitness (cardio) activities for the given user.",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.FitnessActivityFeed+json"
                }
            }
        },
        "GetFitnessActivity": {
            "uri": "{+uri}",
            "httpMethod": "GET",
            "responseClass": "FitnessActivity",
            "parameters": {
                "uri": {
                    "location": "uri",
                    "type": "string",
                    "required": true
                },
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.FitnessActivity+json"
                }
            }
        },
        "GetFitnessActivitySummary": {
            "extends": "GetFitnessActivity",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.FitnessActivitySummary+json"
                },
                "Accept": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.FitnessActivitySummary+json"
                }
            }
        },
        "NewFitnessActivity": {
            "extends": "abstract.FitnessActivity",
            "uri": "{+hg.fitness_activities}",
            "httpMethod": "POST",
            "responseClass": "GenericOutput",
            "additionalParameters": false,
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.NewFitnessActivity+json"
                },
                "type": {
                    "type": "string",
                    "location": "json",
                    "enum": ["Running", "Cycling", "Mountain Biking", "Walking", "Hiking", "Downhill Skiing", "Cross-Country Skiing", "Snowboarding", "Skating", "Swimming", "Wheelchair", "Rowing", "Elliptical", "Other"],
                    "required": true
                },
                "start_time": {
                    "type": "string",
                    "location": "json",
                    "required": true
                },
                "duration": {
                    "type": "number",
                    "location": "json",
                    "required": true
                }
            }
        },
        "UpdateFitnessActivity": {
            "extends": ["abstract.update", "abstract.FitnessActivity"],
            "responseClass": "FitnessActivity",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.FitnessActivity+json"
                }
            }
        },
        "DeleteFitnessActivity": {
            "extends": "abstract.delete"
        },
        "GetStrengthTrainingActivityFeed": {
            "extends": "abstract.feed",
            "uri": "{+hg.strength_training_activities}",
            "summary": "Returns strength activities for the given user.",
            "responseClass": "StrengthTrainingActivityFeedResponse",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.FitnessActivityFeed+json"
                }
            }
        },
        "GetStrengthTrainingActivity": {
            "uri": "{+uri}",
            "httpMethod": "GET",
            "responseClass": "StrengthTrainingActivity",
            "parameters": {
                "uri": {
                    "location": "uri",
                    "type": "string",
                    "required": true
                },
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.StrengthTrainingActivity+json"
                }
            }
        },
        "NewStrengthTrainingActivity": {
            "extends": "abstract.StrengthTrainingActivity",
            "uri": "{+hg.strength_training_activities}",
            "httpMethod": "POST",
            "responseClass": "GenericOutput",
            "additionalParameters": false,
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.NewStrengthTrainingActivity+json"
                },
                "exercises": {
                    "type": "array",
                    "location": "json",
                    "required": true,
                    "minItems": 1,
                    "items": {
                        "$ref": "Exercise"
                    }
                },
                "post_to_facebook": {
                    "type": "boolean",
                    "location": "json",
                    "description": "True to post this activity to Facebook, false to prevent posting (optional; if not specified, the user's default preference is used)"
                },
                "post_to_twitter": {
                    "type": "boolean",
                    "location": "json",
                    "description": "True to post this activity to Twitter, false to prevent posting (optional; if not specified, the user's default preference is used)"
                }
            }
        },
        "UpdateStrengthTrainingActivity": {
            "extends": ["abstract.update", "abstract.StrengthTrainingActivity"],
            "responseClass": "StrengthTrainingActivity",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.StrengthTrainingActivity+json"
                }
            }
        },
        "DeleteStrengthTrainingActivity": {
            "extends": "abstract.delete"
        },
        "GetBackgroundActivitySetFeed": {
            "extends": "abstract.feed",
            "uri": "{+hg.background_activities}",
            "summary": "Returns background activities for the given user.",
            "responseClass": "BackgroundActivitySetFeedResponse",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.BackgroundActivitySetFeed+json"
                }
            }
        },
        "GetBackgroundActivitySet": {
            "uri": "{+uri}",
            "httpMethod": "GET",
            "responseClass": "BackgroundActivitySet",
            "parameters": {
                "uri": {
                    "location": "uri",
                    "type": "string",
                    "required": true
                },
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.BackgroundActivitySet+json"
                }
            }
        },
        "NewBackgroundActivitySet": {
            "extends": "abstract.BackgroundActivitySet",
            "uri": "{+hg.background_activities}",
            "httpMethod": "POST",
            "responseClass": "GenericOutput",
            "additionalParameters": false,
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.NewBackgroundActivitySet+json"
                },
                "timestamp": {
                    "required": true,
                    "location": "json",
                    "type": "string",
                    "description": "The timestamp (e.g., Sat, 1 Jan 2011 00:00:00)"
                },
                "post_to_twitter": {
                    "location": "json",
                    "type": "boolean",
                    "description": "Whether to post these measurements to Twitter (optional; if omitted, the user's default setting will be used)"
                },
                "post_to_facebook": {
                    "location": "json",
                    "type": "boolean",
                    "description": "Whether to post these measurements to Facebook (optional; if omitted, the user's default setting will be used)"
                }
            }
        },
        "UpdateBackgroundActivitySet": {
            "extends": ["abstract.update", "abstract.BackgroundActivitySet"],
            "responseClass": "BackgroundActivitySet",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.BackgroundActivitySet+json"
                }
            }
        },
        "DeleteBackgroundActivitySet": {
            "extends": "abstract.delete"
        },
        "GetSleepSetFeed": {
            "extends": "abstract.feed",
            "responseClass": "SleepSetFeedResponse",
            "uri": "{+hg.sleep}",
            "summary": "Returns sleep activities for the given user.",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.SleepSetFeed+json"
                }
            }
        },
        "GetSleepSet": {
            "uri": "{+uri}",
            "httpMethod": "GET",
            "responseClass": "SleepSet",
            "parameters": {
                "uri": {
                    "location": "uri",
                    "type": "string",
                    "required": true
                },
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.SleepSet+json"
                }
            }
        },
        "NewSleepSet": {
            "extends": "abstract.SleepSet",
            "uri": "{+hg.sleep}",
            "httpMethod": "POST",
            "responseClass": "GenericOutput",
            "additionalParameters": false,
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.NewSleepSet+json"
                },
                "timestamp": {
                    "required": true,
                    "location": "json",
                    "type": "string",
                    "description": "The timestamp (e.g., Sat, 1 Jan 2011 00:00:00)"
                },
                "UNKNOWN": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity (omitted if not available)"
                },
                "post_to_twitter": {
                    "location": "json",
                    "type": "boolean",
                    "description": "Whether to post these measurements to Twitter (optional; if omitted, the user's default setting will be used)"
                },
                "post_to_facebook": {
                    "location": "json",
                    "type": "boolean",
                    "description": "Whether to post these measurements to Facebook (optional; if omitted, the user's default setting will be used)"
                }
            }
        },
        "UpdateSleepSet": {
            "extends": ["abstract.update", "abstract.SleepSet"],
            "responseClass": "SleepSet",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.SleepSet+json"
                }
            }
        },
        "DeleteSleepSet": {
            "extends": "abstract.delete"
        },
        "GetNutritionSetFeed": {
            "extends": "abstract.feed",
            "uri": "{+hg.nutrition}",
            "summary": "Returns nutrition activities for the given user.",
            "responseClass": "NutritionSetFeedResponse",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.NutritionSetFeed+json"
                }
            }
        },
        "GetNutritionSet": {
            "uri": "{+uri}",
            "httpMethod": "GET",
            "responseClass": "NutritionSet",
            "parameters": {
                "uri": {
                    "location": "uri",
                    "type": "string",
                    "required": true
                },
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.NutritionSet+json"
                }
            }
        },
        "NewNutritionSet": {
            "extends": "abstract.NutritionSet",
            "uri": "{+hg.nutrition}",
            "httpMethod": "POST",
            "responseClass": "GenericOutput",
            "additionalParameters": false,
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.NewNutritionSet+json"
                },
                "timestamp": {
                    "required": true,
                    "location": "json",
                    "type": "string",
                    "description": "The timestamp (e.g., Sat, 1 Jan 2011 00:00:00)"
                },
                "calories": {
                    "required": true,
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity"
                },
                "post_to_twitter": {
                    "location": "json",
                    "type": "boolean",
                    "description": "Whether to post these measurements to Twitter"
                },
                "post_to_facebook": {
                    "location": "json",
                    "type": "boolean",
                    "description": "Whether to post these measurements to Facebook"
                }
            }
        },
        "UpdateNutritionSet": {
            "extends": ["abstract.update", "abstract.NutritionSet"],
            "responseClass": "NutritionSet",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.NutritionSet+json"
                }
            }
        },
        "DeleteNutritionSet": {
            "extends": "abstract.delete"
        },
        "GetWeightSetFeed": {
            "extends": "abstract.feed",
            "uri": "{+hg.weight}",
            "summary": "Returns weight activities for the given user.",
            "responseClass": "WeightSetFeedResponse",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.WeightSetFeed+json"
                }
            }
        },
        "GetWeightSet": {
            "uri": "{+uri}",
            "httpMethod": "GET",
            "responseClass": "WeightSet",
            "parameters": {
                "uri": {
                    "location": "uri",
                    "type": "string",
                    "required": true
                },
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.WeightSet+json"
                }
            }
        },
        "NewWeightSet": {
            "extends": "abstract.WeightSet",
            "uri": "{+hg.weight}",
            "httpMethod": "POST",
            "responseClass": "GenericOutput",
            "additionalParameters": false,
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.NewWeightSet+json"
                },
                "timestamp": {
                    "required": true,
                    "location": "json",
                    "type": "string",
                    "description": "The timestamp (e.g., Sat, 1 Jan 2011 00:00:00)"
                },
                "weight": {
                    "required": true,
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in kg"
                },
                "post_to_twitter": {
                    "location": "json",
                    "type": "boolean",
                    "description": "Whether to post these measurements to Twitter"
                },
                "post_to_facebook": {
                    "location": "json",
                    "type": "boolean",
                    "description": "Whether to post these measurements to Facebook"
                }
            }
        },
        "UpdateWeightSet": {
            "extends": ["abstract.update", "abstract.WeightSet"],
            "responseClass": "WeightSet",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.WeightSet+json"
                }
            }
        },
        "DeleteWeightSet": {
            "extends": "abstract.delete"
        },
        "GetGeneralMeasurementSetFeed": {
            "extends": "abstract.feed",
            "uri": "{+hg.general_measurements}",
            "summary": "Returns general measurement activities for the given user.",
            "responseClass": "GeneralMeasurementSetFeedResponse",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.GeneralMeasurementSetFeed+json"
                }
            }
        },
        "GetGeneralMeasurementSet": {
            "uri": "{+uri}",
            "httpMethod": "GET",
            "responseClass": "GeneralMeasurementSet",
            "parameters": {
                "uri": {
                    "location": "uri",
                    "type": "string",
                    "required": true
                },
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.GeneralMeasurementSet+json"
                }
            }
        },
        "NewGeneralMeasurementSet": {
            "extends": "abstract.GeneralMeasurementSet",
            "uri": "{+hg.general_measurements}",
            "httpMethod": "POST",
            "responseClass": "GenericOutput",
            "additionalParameters": false,
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.NewGeneralMeasurementSet+json"
                },
                "timestamp": {
                    "required": true,
                    "location": "json",
                    "type": "string",
                    "description": "The timestamp (e.g., Sat, 1 Jan 2011 00:00:00)"
                },
                "post_to_twitter": {
                    "location": "json",
                    "type": "boolean",
                    "description": "Whether to post these measurements to Twitter"
                },
                "post_to_facebook": {
                    "location": "json",
                    "type": "boolean",
                    "description": "Whether to post these measurements to Facebook"
                }
            }
        },
        "UpdateGeneralMeasurementSet": {
            "extends": ["abstract.update", "abstract.GeneralMeasurementSet"],
            "responseClass": "GeneralMeasurementSet",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.GeneralMeasurementSet+json"
                }
            }
        },
        "DeleteGeneralMeasurementSet": {
            "extends": "abstract.delete"
        },
        "GetDiabetesMeasurementSetFeed": {
            "extends": "abstract.feed",
            "uri": "{+hg.diabetes}",
            "summary": "Returns diabetes activities for the given user.",
            "responseClass": "DiabetesMeasurementSetFeedResponse",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.DiabetesMeasurementSetFeed+json"
                }
            }
        },
        "GetDiabetesMeasurementSet": {
            "uri": "{+uri}",
            "httpMethod": "GET",
            "responseClass": "DiabetesMeasurementSet",
            "parameters": {
                "uri": {
                    "location": "uri",
                    "type": "string",
                    "required": true
                },
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.DiabetesMeasurementSet+json"
                }
            }
        },
        "NewDiabetesMeasurementSet": {
            "extends": "abstract.DiabetesMeasurementSet",
            "uri": "{+hg.diabetes}",
            "httpMethod": "POST",
            "responseClass": "GenericOutput",
            "additionalParameters": false,
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.NewDiabetesMeasurementSet+json"
                },
                "timestamp": {
                    "required": true,
                    "location": "json",
                    "type": "string",
                    "description": "The timestamp (e.g., Sat, 1 Jan 2011 00:00:00)"
                },
                "post_to_twitter": {
                    "location": "json",
                    "type": "boolean",
                    "description": "Whether to post these measurements to Twitter"
                },
                "post_to_facebook": {
                    "location": "json",
                    "type": "boolean",
                    "description": "Whether to post these measurements to Facebook"
                }
            }
        },
        "UpdateDiabetesMeasurementSet": {
            "extends": ["abstract.update", "abstract.DiabetesMeasurementSet"],
            "responseClass": "DiabetesMeasurementSet",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.DiabetesMeasurementSet+json"
                }
            }
        },
        "DeleteDiabetesMeasurementSet": {
            "extends": "abstract.delete"
        },
        "GetRecords": {
            "httpMethod": "GET",
            "uri": "{+hg.records}",
            "summary": "Returns records for the given user.",
            "responseClass": "Records",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.Records+json"
                }
            }
        },
        "GetFriendFeed": {
            "extends": "abstract.feed",
            "uri": "{+hg.team}",
            "summary": "Returns records for the given user.",
            "responseClass": "FriendFeedResponse",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.TeamFeed+json"
                }
            }
        },
        "GetFriend": {
            "httpMethod": "GET",
            "uri": "{+uri}",
            "responseClass": "Friend",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.Member+json"
                },
                "uri": {
                    "location": "uri",
                    "type": "string",
                    "required": true
                }
            }
        },
        "NewFriend": {
            "httpMethod": "POST",
            "uri": "{+hg.team}",
            "responseClass": "GenericOutput",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.Invitation+json"
                },
                "userID": {
                    "location": "json",
                    "type": "string",
                    "description": "The ID of the user to invite",
                    "required": true
                }
            }
        },
        "GetChangeLog": {
            "httpMethod": "GET",
            "uri": "{+hg.change_log}",
            "summary": "Returns records for the given user.",
            "responseClass": "ChangeLog",
            "parameters": {
                "Content-Type": {
                    "location": "header",
                    "static": true,
                    "default": "application/vnd.com.runkeeper.ChangeLog+json"
                }
            }
        }
    },
    "models": {
        "GenericOutput": {
            "type": "object",
            "properties": {
                "status": {
                    "location": "statusCode",
                    "type": "integer"
                },
                "location": {
                    "sentAs": "Location",
                    "location": "header",
                    "type": "string"
                }
            },
            "additionalProperties": {
                "location": "json"
            }
        },
        "Profile": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The user's full name (omitted if not yet specified)",
                    "location": "json"
                },
                "location": {
                    "type": "string",
                    "description": "The user's geographical location (omitted if not yet specified)",
                    "location": "json"
                },
                "athlete_type": {
                    "type": "string",
                    "description": "One of the following values: Athlete, Runner, Marathoner, Ultra Marathoner, Cyclist, Tri-Athlete, Walker, Hiker, Skier, Snowboarder, Skater, Swimmer, Rower (omitted if not yet specified)",
                    "location": "json"
                },
                "gender": {
                    "type": "string",
                    "description": "One of the following values: M, F (omitted if not yet specified)",
                    "location": "json"
                },
                "birthday": {
                    "type": "string",
                    "description": "The user's birthday (e.g., Sat, 1 Jan 2011 00:00:00) (omitted if not yet specified)",
                    "location": "json"
                },
                "elite": {
                    "type": "boolean",
                    "description": "true if the user subscribes to RunKeeper Elite, false otherwise",
                    "location": "json"
                },
                "profile": {
                    "type": "string",
                    "description": "The URL of the user's public, human-readable profile on the RunKeeper Web site",
                    "location": "json"
                },
                "small_picture": {
                    "type": "string",
                    "description": "The URI of the small (50×50 pixels) version of the user's profile picture on the RunKeeper Web site (omitted if the user has no such picture)",
                    "location": "json"
                },
                "normal_picture": {
                    "type": "string",
                    "description": "The URI of the small (100×100 pixels) version of the user's profile picture on the RunKeeper Web site (omitted if the user has no such picture)",
                    "location": "json"
                },
                "medium_picture": {
                    "type": "string",
                    "description": "The URI of the small (200×600 pixels) version of the user's profile picture on the RunKeeper Web site (omitted if the user has no such picture)",
                    "location": "json"
                },
                "large_picture": {
                    "type": "string",
                    "description": "The URI of the small (600×1800 pixels) version of the user's profile picture on the RunKeeper Web site (omitted if the user has no such picture)",
                    "location": "json"
                }
            }
        },
        "FeedResponse": {
            "type": "object",
            "properties": {
                "size": {
                    "type": "integer",
                    "location": "json"
                },
                "items": {
                    "type": "array",
                    "location": "json",
                    "items": {"type": "object"}
                },
                "previous": {
                    "type": "string",
                    "location": "json"
                },
                "next": {
                    "type": "string",
                    "location": "json"
                }
            }
        },
        "DiabetesMeasurementSetFeedResponse": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "items": {
                    "type": "array",
                    "location": "json",
                    "items": {"$ref": "DiabetesMeasurementSetFeedItem"}
                }
            }
        },
        "DiabetesMeasurementSetFeedItem": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "uri": {"type": "string"},
                "timestamp": {"type": "string"},
                "fasting_plasma_glucose_test": {"type": "number"},
                "oral_glucose_tolerance_test": {"type": "number"},
                "random_plasma_glucose_test": {"type": "number"},
                "hemoglobin_a1c": {"type": "number"},
                "insulin": {"type": "number"},
                "c_peptide": {"type": "number"},
                "triglyceride": {"type": "number"}
            }
        },
        "DiabetesMeasurementSet": {
            "type": "object",
            "additionalProperties": {
                "$ref": "GeneralResponseItems"
            },
            "properties": {
                "uri": {"location": "json", "type": "string", "description": "The URI for this measurement set"},
                "userID": {"location": "json", "type": "integer", "description": "The unique ID for the user"},
                "timestamp": {"location": "json", "type": "string", "description": "The timestamp (e.g., Sat, 1 Jan 2011 00:00:00)"},
                "fasting_plasma_glucose_test": {"location": "json", "type": "number", "description": "The value of the measured quantity in mg/dL"},
                "oral_glucose_tolerance_test": {"location": "json", "type": "number", "description": "The value of the measured quantity in mg/dL"},
                "random_plasma_glucose_test": {"location": "json", "type": "number", "description": "The value of the measured quantity in mg/dL"},
                "hemoglobin_a1c": {"location": "json", "type": "number", "description": "The value of the measured quantity in g/dL"},
                "insulin": {"location": "json", "type": "number", "description": "The value of the measured quantity in U"},
                "c_peptide": {"location": "json", "type": "number", "description": "The value of the measured quantity in ng/mL"},
                "triglyceride": {"location": "json", "type": "number", "description": "The value of the measured quantity in mg/dL"}
            }
        },
        "FitnessActivityFeedResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "location": "json",
                    "items": {"$ref": "FitnessActivityFeedItem"}
                }
            }
        },
        "FitnessActivityFeedItem": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "type": {"type": "string"},
                "start_time": {"type": "string"},
                "total_distance": {"type": "number"},
                "duration": {"type": "number"},
                "total_calories": {"type": "number"},
                "source": {"type": "string"},
                "entry_mode": {"type": "string"},
                "has_path": {"type": "boolean"},
                "uri": {"type": "string"}
            }
        },
        "FitnessActivity": {
            "type": "object",
            "additionalProperties": {
                "$ref": "GeneralResponseItems"
            },
            "properties": {
                "uri": {
                    "type": "string",
                    "location": "json"
                },
                "userID": {"type": "integer"},
                "type": {"type": "string"},
                "secondary_type": {"type": "string"},
                "equipment": {"type": "string"},
                "start_time": {"type": "string"},
                "total_distance": {"type": "number"},
                "distance": {
                    "type": "array",
                    "location": "json",
                    "items": {"$ref": "Distance"}
                },
                "duration": {"type": "number"},
                "average_heart_rate": {"type": "integer"},
                "heart_rate": {
                    "type": "array",
                    "location": "json",
                    "items": {"$ref": "HeartRate"}
                },
                "total_calories": {"type": "number"},
                "calories": {
                    "type": "array",
                    "location": "json",
                    "items": {"$ref": "Calories"}
                },
                "climb": {"type": "number"},
                "notes": {"type": "string"},
                "is_live": {"type": "boolean"},
                "path": {
                    "type": "array",
                    "location": "json",
                    "items": {"$ref": "Path"}
                },
                "images": {
                    "type": "array",
                    "location": "json",
                    "items": {"$ref": "Image"}
                },
                "share": {"type": "string"},
                "share_map": {"type": "string"},
                "entry_mode": {"type": "string"},
                "activity": {"type": "string"},
                "comments": {"type": "string"}
            }
        },
        "FriendFeedResponse": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "items": {
                    "type": "array",
                    "location": "json",
                    "items": {"$ref": "FriendFeedItem"}
                }
            }
        },
        "FriendFeedItem": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "reply": {"type": "string"},
                "userID": {"type": "integer"},
                "name": {"type": "string"},
                "profile": {"type": "string"},
                "uri": {"type": "string"}
            }
        },
        "Friend": {
            "type": "object",
            "properties": {
                "userID": {"location": "json", "type": "integer"},
                "name": {"type": "string"},
                "profile": {"type": "string"},
                "status": {"type": "string"}
            }
        },
        "GeneralMeasurementSetFeedResponse": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "items": {
                    "type": "array",
                    "location": "json",
                    "items": {"$ref": "GeneralMeasurementSetFeedItem"}
                }
            }
        },
        "GeneralMeasurementSetFeedItem": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "start_time": {"type": "string"},
                "uri": {"type": "string"}
            }
        },
        "GeneralMeasurementSet": {
            "type": "object",
            "additionalProperties": {
                "$ref": "GeneralResponseItems"
            },
            "properties": {
                "uri": {
                    "location": "json",
                    "type": "string",
                    "description": "The URI for this measurement set"
                },
                "userID": {
                    "location": "json",
                    "type": "integer",
                    "description": "The unique ID for the user"
                },
                "timestamp": {
                    "location": "json",
                    "type": "string",
                    "description": "The timestamp (e.g., Sat, 1 Jan 2011 00:00:00)"
                },
                "systolic": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in mmHg"
                },
                "diastolic": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in mmHg"
                },
                "total_cholesterol": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in mg/dL"
                },
                "hdl": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in mg/dL"
                },
                "ldl": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in mg/dL"
                },
                "vitamin_d": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in ng/mL"
                },
                "hscrp": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in mg/L"
                },
                "crp": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in mg/L"
                },
                "tsh": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in mlU/L"
                },
                "uric_acid": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in mg/dL"
                },
                "resting_heartrate": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in bpm"
                },
                "blood_calcium": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in mg/dL"
                },
                "blood_magnesium": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in mg/dL"
                },
                "creatine_kinase": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in U/L"
                },
                "blood_vitamin_b12": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in pg/mL"
                },
                "blood_folic_acid": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in ng/mL"
                },
                "ferritin": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in ng/mL"
                },
                "il6": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in mg/dL"
                },
                "testosterone": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in mg/dL"
                },
                "blood_potassium": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in mg/dL"
                },
                "blood_sodium": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in mg/dL"
                },
                "blood_zinc": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in mug/dL"
                },
                "blood_chromium": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in mug/dL"
                },
                "white_cell_count": {
                    "location": "json",
                    "type": "number",
                    "description": "The value of the measured quantity in nmol/muL"
                }
            }
        },
        "StrengthTrainingActivityFeedResponse": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "items": {
                    "type": "array",
                    "location": "json",
                    "items": {"$ref": "StrengthTrainingActivityFeedItem"}
                }
            }
        },
        "StrengthTrainingActivityFeedItem": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "start_time": {"type": "string"},
                "uri": {"type": "string"}
            }
        },
        "StrengthTrainingActivity": {
            "type": "object",
            "additionalProperties": {
                "$ref": "GeneralResponseItems"
            },
            "properties": {
                "uri": {
                    "type": "string",
                    "location": "json"
                },
                "userID": {"type": "integer"},
                "start_time ": {
                    "type": "string",
                    "description": "The starting time for the activity (e.g., Sat, 1 Jan 2011 00:00:00)"
                },
                "total_calories ": {
                    "type": "number",
                    "description": "The total calories burned (omitted if not available)"
                },
                "notes": {
                    "type": "string",
                    "description": "Any notes that the user has associated with the activity (max. 1024 characters; optional)"
                },
                "exercises": {
                    "type": "array",
                    "location": "json",
                    "items": {"$ref": "Exercise"}
                },
                "comments ": {
                    "type": "string",
                    "description": "The URI of the comment thread for this activity"
                }
            }
        },
        "BackgroundActivitySetFeedResponse": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "items": {
                    "type": "array",
                    "location": "json",
                    "items": {"$ref": "BackgroundActivitySetFeedItem"}
                }
            }
        },
        "BackgroundActivitySetFeedItem": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "uri": {"type": "string"},
                "timestamp": {"type": "string"},
                "calories_burned": {"type": "number"},
                "steps": {"type": "number"}
            }
        },
        "BackgroundActivitySet": {
            "type": "object",
            "additionalProperties": {
                "$ref": "GeneralResponseItems"
            },
            "properties": {
                "uri": {
                    "location": "json",
                    "type": "string",
                    "description": "The URI for this measurement set"
                },
                "userID": {
                    "type": "integer",
                    "description": "The unique ID for the user"
                },
                "timestamp": {
                    "type": "string",
                    "description": "The timestamp (e.g., Sat, 1 Jan 2011 00:00:00)"
                },
                "calories_burned": {
                    "type": "number",
                    "description": "The value of the measured quantity (omitted if not available)"
                },
                "steps": {
                    "type": "number",
                    "description": "The value of the measured quantity (omitted if not available)"
                }
            }
        },
        "NutritionSetFeedResponse": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "items": {
                    "type": "array",
                    "location": "json",
                    "items": {"$ref": "NutritionSetFeedItem"}
                }
            }
        },
        "NutritionSetFeedItem": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "uri": {"type": "string"},
                "timestamp": {"type": "string"},
                "calories_burned": {"type": "number"},
                "carbohydrates": {"type": "number"},
                "fat": {"type": "number"},
                "fiber": {"type": "number"},
                "protein": {"type": "number"},
                "sodium": {"type": "number"},
                "water": {"type": "number"}
            }
        },
        "NutritionSet": {
            "type": "object",
            "additionalProperties": {
                "$ref": "GeneralResponseItems"
            },
            "properties": {
                "uri": {
                    "type": "string",
                    "description": "The URI for this measurement set",
                    "location": "json"
                },
                "userID": {
                    "type": "integer",
                    "description": "The unique ID for the user"
                },
                "timestamp": {
                    "type": "string",
                    "description": "The timestamp (e.g., Sat, 1 Jan 2011 00:00:00)"
                },
                "calories": {
                    "type": "number",
                    "description": "The value of the measured quantity (omitted if not available)"
                },
                "carbohydrates": {
                    "type": "number",
                    "description": "The value of the measured quantity in g (omitted if not available)"
                },
                "fat": {
                    "type": "number",
                    "description": "The value of the measured quantity in g (omitted if not available)"
                },
                "fiber": {
                    "type": "number",
                    "description": "The value of the measured quantity in g (omitted if not available)"
                },
                "protein": {
                    "type": "number",
                    "description": "The value of the measured quantity in g (omitted if not available)"
                },
                "sodium": {
                    "type": "number",
                    "description": "The value of the measured quantity in mg (omitted if not available)"
                },
                "water": {
                    "type": "number",
                    "description": "The value of the measured quantity in fl oz (omitted if not available)"
                },
                "meal": {
                    "type": "string",
                    "description": "The meal, as one of the following values:breakfast, lunch, dinner, snack, other,unspecified"
                }
            }
        },
        "SleepSetFeedResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "location": "json",
                    "items": {"$ref": "SleepSetFeedItem"}
                }
            }
        },
        "SleepSetFeedItem": {
            "type": "object",
            "properties": {
                "uri": {"type": "string"},
                "timestamp": {"type": "string"},
                "total_sleep": {"type": "number"},
                "deep": {"type": "number"},
                "rem": {"type": "number"},
                "light": {"type": "number"},
                "awake": {"type": "number"},
                "times_woken": {"type": "number"}
            }
        },
        "SleepSet": {
            "type": "object",
            "additionalProperties": {
                "$ref": "GeneralResponseItems"
            },
            "properties": {
                "uri": {
                    "location": "json",
                    "type": "string",
                    "description": "The URI for this measurement set"
                },
                "userID": {
                    "type": "integer",
                    "description": "The unique ID for the user"
                },
                "timestamp": {
                    "type": "string",
                    "description": "The timestamp (e.g., Sat, 1 Jan 2011 00:00:00)"
                },
                "total_sleep": {
                    "type": "number",
                    "description": "The value of the measured quantity in min (omitted if not available)"
                },
                "deep": {
                    "type": "number",
                    "description": "The value of the measured quantity in min (omitted if not available)"
                },
                "rem": {
                    "type": "number",
                    "description": "The value of the measured quantity in min (omitted if not available)"
                },
                "light": {
                    "type": "number",
                    "description": "The value of the measured quantity in min (omitted if not available)"
                },
                "awake": {
                    "type": "number",
                    "description": "The value of the measured quantity in min (omitted if not available)"
                },
                "times_woken": {
                    "type": "number",
                    "description": "The value of the measured quantity (omitted if not available)"
                }
            }
        },
        "WeightSetFeedResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "location": "json",
                    "items": {"$ref": "WeightSetFeedItem"}
                }
            }
        },
        "WeightSetFeedItem": {
            "type": "object",
            "properties": {
                "uri": {"type": "string"},
                "timestamp": {"type": "string"},
                "weight": {"type": "number"},
                "UNKNOWN": {"type": "number"},
                "free_mass": {"type": "number"},
                "fat_percent": {"type": "number"},
                "mass_weight": {"type": "number"},
                "bmi": {"type": "number"}
            }
        },
        "WeightSet": {
            "type": "object",
            "additionalProperties": {
                "$ref": "GeneralResponseItems"
            },
            "properties": {
                "uri": {"location": "json", "type": "string", "description": "The URI for this measurement set"},
                "userID": {"location": "json", "type": "integer", "description": "The unique ID for the user"},
                "timestamp": {"location": "json", "type": "string", "description": "The timestamp (e.g., Sat, 1 Jan 2011 00:00:00)"},
                "weight": {"location": "json", "type": "number", "description": "The value of the measured quantity in kg (omitted if not available)"},
                "free_mass": {"location": "json", "type": "number", "description": "The value of the measured quantity in kg (omitted if not available)"},
                "fat_percent": {"location": "json", "type": "number", "description": "The value of the measured quantity (omitted if not available)"},
                "mass_weight": {"location": "json", "type": "number", "description": "The value of the measured quantity in kg (omitted if not available)"},
                "bmi": {"location": "json", "type": "number", "description": "The value of the measured quantity (omitted if not available)"}
            }
        },
        "Calories": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "timestamp": {
                    "type": "number",
                    "description": "The number of seconds since the start of the activity"
                },
                "calories": {
                    "type": "number",
                    "description": "The total calories burned since the start of the activity"
                }
            }
        },
        "ChangeLog": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "fitness_activities": {"location": "json", "type": "array", "items": {"$ref": "Changes"}},
                "strength_training_activities": {"location": "json", "type": "array", "items": {"$ref": "Changes"}},
                "background_activities": {"location": "json", "type": "array", "items": {"$ref": "Changes"}},
                "diabetes": {"location": "json", "type": "array", "items": {"$ref": "Changes"}},
                "general_measurements": {"location": "json", "type": "array", "items": {"$ref": "Changes"}},
                "nutrition": {"location": "json", "type": "array", "items": {"$ref": "Changes"}},
                "sleep": {"location": "json", "type": "array", "items": {"$ref": "Changes"}},
                "weight": {"location": "json", "type": "array", "items": {"$ref": "Changes"}}
            }
        },
        "Changes": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "modified": {
                    "location": "json",
                    "type": "array",
                    "description": "The portion of the feed that represents newly-created and/or updated items; the exact format is identical to that used in the regular feed for the resource type"
                },
                "deleted": {
                    "location": "json",
                    "type": "array",
                    "description": "The URIs of those items that have been deleted"
                }
            }
        },
        "CommentThread": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "uri": {
                    "location": "json",
                    "type": "string",
                    "description": "The URI for this thread"
                },
                "userID": {
                    "type": "integer",
                    "description": "The unique ID for the user that completed the commented-on activity"
                },
                "comments": {
                    "type": "array",
                    "description": "The comments",
                    "items": {"$ref": "Comment"}
                }
            }
        },
        "Comment": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "timestamp": {
                    "type": "string",
                    "description": "The time at which the comment was posted"
                },
                "userID": {
                    "type": "integer",
                    "description": "The unique ID for the user that left the comment"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the user that left the comment"
                },
                "comment": {
                    "type": "string",
                    "description": "The comment"
                }
            }
        },
        "Distance": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "timestamp": {
                    "type": "number",
                    "description": "The number of seconds since the start of the activity"
                },
                "distance": {
                    "type": "number",
                    "description": "The total distance traveled since the start of the activity, in meters"
                }
            }
        },
        "HeartRate": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "timestamp": {
                    "type": "number",
                    "description": "The number of seconds since the start of the activity"
                },
                "heart_rate": {
                    "type": "integer",
                    "description": "The instantaneous heart rate, in beats per minute"
                }
            }
        },
        "Image": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "timestamp": {
                    "type": "number",
                    "description": "The number of seconds since the start of the activity"
                },
                "latitude": {
                    "type": "number",
                    "description": "The latitude, in degrees (values increase northward and decrease southward)"
                },
                "longitude": {
                    "type": "number",
                    "description": "The longitude, in degrees (values increase eastward and decrease westward)"
                },
                "uri": {
                    "type": "string",
                    "description": "The URI of the image"
                },
                "thumbnail_uri": {
                    "type": "string",
                    "description": "The URI of the thumbnail version of the image"
                }
            }
        },
        "Path": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "timestamp": {
                    "type": "number",
                    "description": "The number of seconds since the start of the activity"
                },
                "latitude": {
                    "type": "number",
                    "description": "The latitude, in degrees (values increase northward and decrease southward)"
                },
                "longitude": {
                    "type": "number",
                    "description": "The longitude, in degrees (values increase eastward and decrease westward)"
                },
                "altitude": {
                    "type": "number",
                    "description": "The altitude of the point, in meters"
                },
                "type": {
                    "type": "string",
                    "description": "One of the following values: start, end, gps, pause, resume, manual"
                }
            }
        },
        "Records": {
            "type": "object",
            "additionalProperties": {
                "location": "json",
                "type": "array",
                "items": {
                    "$ref": "Record"
                }
            }
        },
        "Record": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "activity_type": {
                    "location": "json",
                    "type": "string",
                    "description": "The type of activity, as one of the following values: Running, Cycling, Mountain Biking, Walking, Hiking, Downhill Skiing, Cross-Country Skiing, Snowboarding, Skating, Swimming, Wheelchair, Rowing, Elliptical, Other"
                },
                "stats": {
                    "location": "json",
                    "type": "array",
                    "description": "The statistics for the activity type (empty if no records are available)",
                    "items": {"$ref": "Stat"}
                }
            }
        },
        "Stat": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "stat_type": {
                    "type": "string",
                    "description": "The type of statistic, as one of the following values: BEST_ACTIVITY, BEST_WEEK, LAST_WEEK, THIS_WEEK, BEST_MONTH, LAST_MONTH, THIS_MONTH, OVERALL"
                },
                "value": {
                    "type": "number",
                    "description": "The record distance value"
                },
                "date": {
                    "type": "string",
                    "description": "The date of the record (e.g., Sat, 1 Jan 2011 00:00:00)"
                }
            }
        },
        "Exercise": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "primary_type": {
                    "type": "string",
                    "description": "The primary exercise type"
                },
                "secondary_type": {
                    "type": "string",
                    "description": "The secondary exercise type"
                },
                "primary_muscle_group": {
                    "type": "string",
                    "description": "The primary muscle group"
                },
                "secondary_muscle_group": {
                    "type": "string",
                    "description": "The secondary muscle group"
                },
                "routine": {
                    "type": "string",
                    "description": "Free-form tag for the routine of which this exercise is a part"
                },
                "notes": {
                    "type": "string",
                    "description": "Any notes for this exercise"
                },
                "sets": {
                    "type": "array",
                    "description": "The sets performed during this exercise",
                    "items": {
                        "$ref": "ExerciseSet"
                    }
                }
            }
        },
        "ExerciseSet": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "weight": {
                    "type": "number"
                },
                "repetitions": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                }
            }
        },
        "GeneralResponseItems": {
            "type": "object",
            "properties": {
                "source": {
                    "location": "json",
                    "type": "string",
                    "description": "The name of the application that last modified this measurement set"
                },
                "previous": {
                    "type": "string",
                    "description": "The URI of the previous measurement set for the user (omitted for the oldest measurement set)"
                },
                "next": {
                    "type": "string",
                    "description": "The URI of the next measurement set for the user (omitted for the most-recent measurement set)"
                },
                "nearest_fitness_activity": {
                    "type": "string",
                    "description": "The URI of the fitness activity closest in time to this activity for the user (omitted if no fitness activities have been recorded)"
                },
                "nearest_teammate_fitness_activity": {
                    "type": "array",
                    "description": "The URIs of the fitness activities closest in time to this activity for each friend (empty if no fitness activities have been recorded)"
                },
                "nearest_strength_training_activity": {
                    "type": "string",
                    "description": "The URI of the strength training activity closest in time to this activity for the user (omitted if no strength training activities have been recorded)"
                },
                "nearest_teammate_strength_training_activities": {
                    "type": "array",
                    "description": "The URIs of the strength training activities closest in time to this activity for each friend (empty if no strength training activities have been recorded)"
                },
                "nearest_teammate_background_activities": {
                    "type": "array",
                    "description": "The URIs of the background activities closest in time to this activity for each friend (empty if no background activities have been recorded)"
                },
                "nearest_sleep": {
                    "type": "string",
                    "description": "The URI of the sleep measurement set closest in time to this activity for the user (omitted if no sleep measurements have been taken)"
                },
                "nearest_teammate_sleep": {
                    "type": "array",
                    "description": "The URIs of the sleep measurement sets closest in time to this activity for each friend (empty if no sleep measurements have been taken)"
                },
                "nearest_nutrition": {
                    "type": "string",
                    "description": "The URI of the nutrition measurement sets closest in time to this activity for the user (omitted if no nutrition measurements have been token)"
                },
                "nearest_teammate_nutrition": {
                    "type": "array",
                    "description": "The URIs of the nutrition measurement sets closest in time to this activity for each friend (empty if no nutrition measurements have been token)"
                },
                "nearest_weight": {
                    "type": "string",
                    "description": "The URI of the weight measurement sets closest in time to this activity for the user (omitted if no weight measurements have been token)"
                },
                "nearest_teammate_weight": {
                    "type": "array",
                    "description": "The URIs of the weight measurement sets closest in time to this activity for each friend (empty if no weight measurements have been token)"
                },
                "nearest_general_measurement": {
                    "type": "string",
                    "description": "The URI of the general measurement set measurement closest in time to this activity for the user (omitted if no general measurements have been token)"
                },
                "nearest_teammate_general_measurements": {
                    "type": "array",
                    "description": "The URIs of the general measurement sets closest in time to this activity for each friend (empty if no general measurements have been token)"
                },
                "nearest_diabetes": {
                    "type": "string",
                    "description": "The URI of the diabetes measurement sets closest in time to this activity for the user (omitted if no diabetes measurements have been token)"
                },
                "nearest_teammate_diabetes": {
                    "type": "array",
                    "description": "The URIs of the diabetes measurement sets closest in time to this activity for each friend (empty if no diabetes measurements have been token)"
                }

            }
        }
    }
}